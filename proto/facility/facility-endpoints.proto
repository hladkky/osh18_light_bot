syntax = "proto3";

import "v1/facility/facility-rapid-response-teams.proto";
import "v1/facility/facility-general-info.proto";
import "v1/facility/facility.proto";
import "v1/facility/light-weight-facility.proto";
import "v1/hub/hub-permission.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "systems/ajax/logging/proto/log_marker.proto";

option swift_prefix = "";
option java_generic_services = true;
option java_package = "systems.ajax.a911.grpc.facility.v1";

service FacilityService {

   /*
    * Create facility using legacy flow (before installation companies)
   */
  rpc createFacility (CreateFacilityRequest) returns (Facility);

  /*
   * Create facility using new flow for installation companies
   */
  rpc createFacilityV2 (CreateFacilityRequest) returns (Facility);

  rpc searchFacilities (SearchFacilitiesRequest) returns (SearchFacilitiesResponse);

  rpc getFacility (GetFacilityRequest) returns (Facility);

  rpc updateFacilityGeneralInfo (UpdateFacilityGeneralInfoRequest) returns (Facility);

  rpc enableSleepMode (EnableSleepModeRequest) returns (Facility);

  rpc disableSleepMode (DisableSleepModeRequest) returns (Facility);

  rpc removeFacility (RemoveFacilityRequest) returns (google.protobuf.Empty);

  rpc scheduleFacilityRemoval (ScheduleFacilityRemovalRequest) returns (google.protobuf.Empty);

  rpc cancelFacilityRemoval (CancelFacilityRemovalRequest) returns (google.protobuf.Empty);

  rpc streamFacility (StreamFacilityRequest) returns (stream Facility);

  rpc approveMonitoring (UpdateFacilityStatusRequest) returns (Facility);

  rpc searchLightWeightFacilities(SearchLightWeightFacilityRequest) returns (LightWeightFacilityResponse);

  /*
   * Facility Rapid Response Teams
   */
  rpc streamRapidResponseTeams (StreamFacilityRapidResponseTeamsRequest) returns (stream FacilityRapidResponseTeams);
  rpc saveRapidResponseTeams (FacilityRapidResponseTeams) returns (google.protobuf.Empty);

  rpc streamFacilityHubPermissionsForEmployee(FacilityHubPermissionStreamRequest) returns (stream FacilityHubPermissionStreamResponse);
  rpc getCompanyHubPermissionDuration(CompanyHubPermissionDurationRequest) returns (CompanyHubPermissionDurationResponse);
}

message CreateFacilityRequest {
  string registration_number = 1;
  string name = 2;
  string hub_qr = 3;
}

message GetFacilityRequest {
  string facility_id = 1;
}

message RemoveFacilityRequest {
  string facility_id = 1;
  bool force_close_incident = 2;
}

message ScheduleFacilityRemovalRequest {
  string facility_id = 1;
  int64 days_to_wait = 2;
  bool force_close_incident = 3;
}

message CancelFacilityRemovalRequest {
  string facility_id = 1;
}

message FacilitiesResponse {
  repeated Facility facilities = 1;
  string pagination_token = 2;
}

message PendingApprovalFacilitiesResponse {
  repeated Facility facilities = 1;
}

message UpdateFacilityGeneralInfoRequest {
  string facility_id = 1;
  FacilityGeneralInfo general_info = 2;
  uint64 version = 3;
}

message StreamFacilityRapidResponseTeamsRequest {
  string facility_id = 1;
}

message EnableSleepModeRequest {
  string facility_id = 1;
  uint32 sleep_minutes = 2;
}

message DisableSleepModeRequest {
  string facility_id = 1;
}

message SearchFacilitiesRequest {
  string search_phrase = 1;
}

message UpdateFacilityStatusRequest {
  string facility_id = 1;
}

message SearchFacilitiesResponse {
  repeated Facility registration_number = 1;
  repeated Facility agreement_number = 2;
  repeated Facility hub_id = 3 [(log_marker) = LOG_MARKER_HUB_ID];
  repeated Facility name = 4;
  repeated Facility address = 5;
  repeated Facility phone_number = 6;
  repeated Facility responsible_person_name = 7;
  repeated Facility responsible_person_phone_number = 8;
}

message StreamFacilityRequest {
  string facility_id = 1;
}

message FacilityHubPermissionStreamRequest {
  string facility_id = 1;
}

message FacilityHubPermissionStreamResponse {
  FacilityHubPermission permission = 1;
}

message FacilityHubPermission {
  repeated v1.hub.HubPermission hub_permissions = 1;
  google.protobuf.Timestamp installation_permissions_expired_at = 2;
  PermissionType installation_permission_type = 3;
}

message CompanyHubPermissionDurationRequest {
  string facility_id = 1;
}

message CompanyHubPermissionDurationResponse {
  google.protobuf.Timestamp installation_permissions_expired_at = 1;
  PermissionType installation_permission_type = 2;
}

enum PermissionType {
  DEFAULT_PERMISSION = 0;
  PARTIAL_PERMISSION = 1;
  FULL_PERMISSION = 2;
}
