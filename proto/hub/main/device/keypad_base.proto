syntax = "proto3";

package systems.ajax.a911.grpc.v1.hub.main;
option swift_prefix = "Systems";
option java_package = "systems.ajax.a911.grpc.v1.main.device";
option java_multiple_files = true;

import "google/protobuf/wrappers.proto";
import "v1/hub/main/device/common_device.proto";
import "v1/hub/main/device/common_fibra.proto";

message KeypadBase {
  CommonDevicePart common_part = 1000;
  KeypadBeepPart keypad_beep_part = 1001;
  KeypadTouchscreenPart keypad_touchscreen_part = 1002;
  KeypadTouchscreenFibraPart keypad_touchscreen_fibra_part = 1003;
  KeypadOutdoorBasePart keypad_outdoor_base_part = 1004;
  KeypadOutdoorFibraPart keypad_outdoor_fibra_part = 1005;
  KeypadOutdoorPart keypad_outdoor_part = 1006;

  repeated SirenTrigger siren_triggers = 0x2E;

  repeated State keypad_state = 0x33;
  string password_hash = 0x38;
  string password_hash_duress = 0x39;
  int32 minutes_to_block = 0x3A;
  FastArming fast_arming = 0x3B;
  Blocking blocking = 0x3C;
  repeated IndicationConfig indication_config = 0x3D;
  repeated KeypadAccessProfile keypad_access_profile = 0x3E;
  ArmInversion arm_inversion = 0x3F;
  repeated AccessMask accessMask = 0x40;
  repeated string group_associated = 0x41;
  repeated NfcConfig nfc_config = 0x42;
  repeated BleConfig ble_config = 0x43;
  PrxSensitivity prx_sensitivity = 0x72;
  repeated PasswordIntegrity password_integrity = 0x7A;
  repeated ChainAuth chain_auth = 0x52;
  int32 chain_auth_timeout = 0x54;
  AlarmRestrictionMode alarm_restriction_mode = 0x51;
  repeated Functionality functionality = 0x95 [deprecated = true];
  repeated FunctionalityV2 functionality_v2 = 0x53;

  Subtype subtype = 0xC3;

  enum SirenTrigger {
    SIREN_TRIGGER_UNSPECIFIED = 0;
    SIREN_TRIGGER_SECURITY_BUTTON = 1;
    SIREN_TRIGGER_FIRE_BUTTON = 2;
    SIREN_TRIGGER_MEDICAL_BUTTON = 3;
  }

  message State {
    BlockingState state_blocking = 1;
    reserved 2 to max;

    enum BlockingState{
      BLOCKING_STATE_UNLOCKED = 0;
      BLOCKING_STATE_BLOCKED = 1;
    }
  }

  enum FastArming {
    FAST_ARMING_UNSPECIFIED = 0;
    FAST_ARMING_DISABLED = 1;
    FAST_ARMING_ENABLED = 2;
  }

  enum Blocking {
    BLOCKING_UNSPECIFIED = 0;
    BLOCKING_DISABLED = 1;
    BLOCKING_ENABLED = 2;
  }

  message IndicationConfig {
    oneof settingField {
      int32 backlight_brightness = 1;
      bool auto_backlight_brightness = 2;
      LedMode led_mode = 3;
      int32 volume = 4;
      bool post_alarm_indication = 5;
    }

    enum LedMode {
      LED_MODE_UNSPECIFIED = 0;
      LED_MODE_OFF = 1;
      LED_MODE_ARMED = 2;
      LED_MODE_ALWAYS = 3;
    }
  }

  enum KeypadAccessProfile {
    KEYPAD_ACCESS_PROFILE_UNSPECIFIED = 0;
    KEYPAD_ACCESS_PROFILE_USER_PASS = 1;
    KEYPAD_ACCESS_PROFILE_KEYBOARD_PASS = 2;
    reserved 3 to max;
  }

  enum ArmInversion {
    ARM_INVERSION_UNSPECIFIED = 0;
    ARM_INVERSION_DISABLED = 1;
    ARM_INVERSION_ENABLED = 2;
  }

  enum AccessMask {
    ACCESS_MASK_UNSPECIFIED = 0;
    ACCESS_MASK_MUTE_FIRE_ALARMS = 1;
  }

  message NfcConfig {
    oneof settingField {
      bool enabled = 1;
    }
  }

  message BleConfig {
    oneof settingField {
      bool enabled = 1;
      Sensitivity sensitivity = 2;
    }

    enum Sensitivity {
      SENSITIVITY_UNSPECIFIED = 0;
      SENSITIVITY_MINIMUM = 1;
      SENSITIVITY_BELOW_AVERAGE = 2;
      SENSITIVITY_AVERAGE = 3;
      SENSITIVITY_ABOVE_AVERAGE = 4;
      SENSITIVITY_MAXIMUM = 5;
    }
  }

  enum PrxSensitivity {
    PRX_SENSITIVITY_UNSPECIFIED = 0;
    PRX_SENSITIVITY_MINIMAL = 1;
    PRX_SENSITIVITY_LOW = 2;
    PRX_SENSITIVITY_NORMAL = 3;
    PRX_SENSITIVITY_HIGH = 4;
    PRX_SENSITIVITY_MAXIMAL = 5;
  }

  enum AlarmRestrictionMode {
    ALARM_RESTRICTION_MODE_UNSPECIFIED = 0;
    ALARM_RESTRICTION_MODE_ALWAYS = 1;
    ALARM_RESTRICTION_MODE_IF_ARMED = 2;
  }

  enum ChainAuth {
    CHAIN_AUTH_UNSPECIFIED = 0;
    CHAIN_AUTH_OFF = 1;
    CHAIN_AUTH_ON = 2;
  }

  enum Functionality {
    FUNCTIONALITY_UNSPECIFIED = 0;
    FUNCTIONALITY_INTEGRITY_CHECK = 1;
    FUNCTIONALITY_EASY_DISARM_BY_PASSWORD = 2;
    FUNCTIONALITY_EASY_DISARM_BY_TAG_OR_CARD = 3;
  }

  enum FunctionalityV2 {
    FUNCTIONALITY_V2_UNSPECIFIED = 0;
    FUNCTIONALITY_V2_ONE_TOUCH = 1;
    FUNCTIONALITY_V2_EASY_DISARM_BY_PASSWORD = 2;
    FUNCTIONALITY_V2_EASY_DISARM_BY_TAG_OR_CARD = 3;
  }

  enum PasswordIntegrity {
    PASSWORD_INTEGRITY_UNSPECIFIED = 0;
    PASSWORD_INTEGRITY_MAIN_PASSWORD_RESET_REQUIRED = 1;
    PASSWORD_INTEGRITY_DURESS_PASSWORD_RESET_REQUIRED = 2;
  }

  enum Subtype {
    SUBTYPE_UNSPECIFIED = 0;
    SUBTYPE_KEYPAD_BEEP = 1;            // KeypadBeepPart
    SUBTYPE_KEYPAD_TOUCHSCREEN = 2;     // KeypadBeepPart + KeypadTouchPart
    SUBTYPE_KEYPAD_TOUCHSCREEN_FIBRA = 3;     // KeypadBeepPart + KeypadTouchPart + KeypadTouchscreenFibraPart
    SUBTYPE_KEYPAD_OUTDOOR_BASE = 4;     // KeypadBeepPart + KeypadOutdoorBasePart
    SUBTYPE_KEYPAD_OUTDOOR = 5;     // KeypadBeepPart + KeypadOutdoorBasePart + KeypadOutdoorPart
    SUBTYPE_KEYPAD_OUTDOOR_FIBRA = 6;     // KeypadBeepPart + KeypadOutdoorBasePart + KeypadOutdoorFibraPart
  }

  message KeypadBeepPart {
    ChimesEnabled chimes_enabled = 0x44;
    int32 seconds_to_act = 0x45;
    repeated BeepConfig beep_config = 0x46;
    repeated AlarmDelayBeep alarm_delay_beep = 0x47;
    repeated ActOnArming act_on_arming = 0x48;
    int32 alarm_group_associated = 0x79;
    repeated ProgressAnnunciationThreshold progress_annunciation_thresholds = 0x7B;

    enum ChimesEnabled {
      CHIMES_ENABLED_UNSPECIFIED = 0;
      CHIMES_ENABLED_DISABLED = 1;
      CHIMES_ENABLED_ENABLED = 2;
    }

    message BeepConfig {
      oneof settingField {
        EventsVolume events_volume = 1;
        AlarmVolume alarm_volume = 2;
        SilentEntryDelayAnnunciation silent_entry_delay_annunciation = 3;
      }

      enum EventsVolume {
        EVENTS_VOLUME_UNSPECIFIED = 0;
        EVENTS_VOLUME_LOW = 2;
        EVENTS_VOLUME_MEDIUM = 3;
        EVENTS_VOLUME_LOUD = 4;
      }

      enum AlarmVolume {
        ALARM_VOLUME_UNSPECIFIED = 0;
        ALARM_VOLUME_OFF = 1;
        ALARM_VOLUME_LOW = 2;
        ALARM_VOLUME_MEDIUM = 3;
        ALARM_VOLUME_LOUD = 4;
      }

      enum SilentEntryDelayAnnunciation {
        SILENT_ENTRY_DELAY_ANNUNCIATION_UNSPECIFIED = 0;
        SILENT_ENTRY_DELAY_ANNUNCIATION_DISABLED = 1;
        SILENT_ENTRY_DELAY_ANNUNCIATION_ENABLED = 2;
      }
    }

    enum AlarmDelayBeep {
      ALARM_DELAY_BEEP_UNSPECIFIED = 0;
      ALARM_DELAY_BEEP_ARM = 1;
      ALARM_DELAY_BEEP_DISARM = 2;
      ALARM_DELAY_BEEP_NIGHT_ARM = 3;
      ALARM_DELAY_BEEP_NIGHT_DISARM = 4;
    }

    enum ActOnArming {
      ACT_ON_ARMING_UNSPECIFIED = 0;
      ACT_ON_ARMING_ARM = 1;
      ACT_ON_ARMING_DISARM = 2;
      ACT_ON_ARMING_NIGHT_ARM = 3;
      ACT_ON_ARMING_NIGHT_DISARM = 4;
      ACT_ON_ARMING_ABORT_WINDOW = 5;
      ACT_ON_ARMING_CANCEL_WINDOW = 6;
    }

    message ProgressAnnunciationThreshold {
      oneof setting {
        Delay entry_delay = 1;
        Delay exit_delay = 2;
      }

      enum Delay {
        DELAY_UNSPECIFIED = 0;
        DELAY_DISABLED = 1;
        DELAY_5_SEC = 2;
        DELAY_10_SEC = 3;
        DELAY_15_SEC = 4;
      }
    }
  }

  message KeypadTouchscreenPart {
    repeated UiConfig ui_config = 0x4A;

    Language language = 0x8E;
    string button1_scenario_id = 0x8F;
    string button2_scenario_id = 0x90;
    string button3_scenario_id = 0x91;
    string button4_scenario_id = 0x92;
    string button5_scenario_id = 0x93;
    string button6_scenario_id = 0x94;
    ExternalPower external_power = 0x6C;
    DataChannelSignalQuality data_channel_signal_quality = 0x8D;
    DataChannelOk data_channel_ok = 0x70;
    repeated FunctionalityKpt functionality_kpt = 0x95;

    message UiConfig {
      oneof settingField {
        bool security_screen_enabled = 1;
        SecurityScreenAuthentication security_screen_authentication = 2;
        bool automation_screen_enabled = 3;
        AutomationScreenAuthentication  automation_screen_authentication = 4;
        bool police_button_enabled = 5;
        bool fire_button_enabled = 6;
        bool medical_button_enabled = 7;
        ThemeColor theme_color = 9;
        bool always_on_enabled = 10;
        bool confirm_emergency_action_enabled = 11;
        bool emergency_screen_enabled = 12;
        bool chimes_control_enabled = 13;
      }

      enum SecurityScreenAuthentication {
        SECURITY_SCREEN_AUTHENTICATION_UNSPECIFIED = 0;
        SECURITY_SCREEN_AUTHENTICATION_INITIAL = 1;
        SECURITY_SCREEN_AUTHENTICATION_AFTER = 2;
      }

      enum AutomationScreenAuthentication {
        AUTOMATION_SCREEN_AUTHENTICATION_UNSPECIFIED = 0;
        AUTOMATION_SCREEN_AUTHENTICATION_INITIAL = 1;
        AUTOMATION_SCREEN_AUTHENTICATION_NEVER = 2;
      }

      enum ThemeColor {
        THEME_COLOR_UNSPECIFIED = 0;
        THEME_COLOR_BLACK = 1;
        THEME_COLOR_WHITE = 2;
      }
    }

    enum ExternalPower {
      EXTERNAL_POWER_UNSPECIFIED = 0;
      EXTERNAL_POWER_ABSENT = 1;
      EXTERNAL_POWER_PRESENT = 2;
    }

    enum Language {
      LANGUAGE_ENGLISH = 0x00;
      LANGUAGE_UKRAINIAN = 0x01;
      LANGUAGE_ARABIC = 0x02;
      LANGUAGE_BULGARIAN = 0x03;
      LANGUAGE_CATALAN = 0x04;
      LANGUAGE_CROATIAN = 0x05;
      LANGUAGE_CZECH = 0x06;
      LANGUAGE_DANISH = 0x07;
      LANGUAGE_DUTCH = 0x08;
      LANGUAGE_ESTONIAN = 0x09;
      LANGUAGE_FINNISH = 0x0A;
      LANGUAGE_FRENCH = 0x0B;
      LANGUAGE_GERMAN = 0x0D;
      LANGUAGE_GREEK = 0x0E;
      LANGUAGE_HUNGARIAN = 0x0F;
      LANGUAGE_ICELANDIC = 0x10;
      LANGUAGE_ITALIAN = 0x11;
      LANGUAGE_LATVIAN = 0x12;
      LANGUAGE_MACEDONIAN = 0x13;
      LANGUAGE_NORWEGIAN = 0x14;
      LANGUAGE_PERSIAN = 0x15;
      LANGUAGE_POLISH = 0x16;
      LANGUAGE_PORTUGUESE = 0x17;
      LANGUAGE_ROMANIAN = 0x18;
      LANGUAGE_RUSSIAN = 0x19;
      LANGUAGE_SERBIAN = 0x1A;
      LANGUAGE_SLOVAK = 0x1B;
      LANGUAGE_SLOVENIAN = 0x1C;
      LANGUAGE_SPANISH = 0x1D;
      LANGUAGE_SWEDISH = 0x1E;
      LANGUAGE_TURKISH = 0x1F;
      LANGUAGE_VIETNAMESE = 0x20;
    }

    enum DataChannelSignalQuality {
      DATA_CHANNEL_SIGNAL_QUALITY_UNSPECIFIED = 0;
      DATA_CHANNEL_SIGNAL_QUALITY_VERY_LOW = 1;
      DATA_CHANNEL_SIGNAL_QUALITY_LOW = 2;
      DATA_CHANNEL_SIGNAL_QUALITY_MEDIUM = 3;
      DATA_CHANNEL_SIGNAL_QUALITY_HIGH = 4;
    }

    enum DataChannelOk {
      DATA_CHANNEL_UNSPECIFIED = 0;
      DATA_CHANNEL_NOT_OK = 1;
      DATA_CHANNEL_OK = 2;
    }

    enum FunctionalityKpt {
      FUNCTIONALITY_KPT_UNSPECIFIED = 0;
      FUNCTIONALITY_KPT_INTEGRITY_CHECK = 1;
    }
  }

  message KeypadTouchscreenFibraPart{
    CommonFibraPart common_fibra_part = 1001;

    BatteryCharging battery_charging = 0xCD;
    BatteryBroken battery_broken = 0xCE;
    int32 battery_percents = 0xD0;
    google.protobuf.Int32Value battery_percents_v2 = 0xF5;
    ChargeCurrentLevel origin_charge_current_level = 0xD9;
    ChargeCurrentLevel charge_current_level = 0xDA;

    enum BatteryCharging {
      BATTERY_CHARGING_UNSPECIFIED = 0;
      BATTERY_CHARGING_NO = 1;
      BATTERY_CHARGING_YES = 2;
    }

    enum BatteryBroken {
      BATTERY_BROKEN_UNSPECIFIED = 0;
      BATTERY_BROKEN_NO = 1;
      BATTERY_BROKEN_YES = 2;
    }

    enum ChargeCurrentLevel{
      CHARGE_CURRENT_LEVEL_UNSPECIFIED = 0;
      CHARGE_CURRENT_NO_CHARGE = 1;
      CHARGE_CURRENT_LEVEL_LOW = 2;
      CHARGE_CURRENT_LEVEL_MEDIUM = 3;
      CHARGE_CURRENT_LEVEL_MAX = 4;
    }
  }

  message KeypadOutdoorBasePart {
    repeated UiConfig ui_config = 0x4A;
    string button1_scenario_id = 0x8F;
    repeated StartButtonFunction star_button_function = 0xE3;
    FunctionMode function_mode = 0xE4;
    ArmingModeOkButton arming_mode_ok_button = 0xE6;
    ButtonActuatorControl button1_actuator_control = 0xEB;

    message StartButtonFunction {
      oneof config {
        ShortPress short_press = 1001;
        LongPress long_press = 1002;
      }

      enum ShortPress {
        SHORT_PRESS_UNSPECIFIED = 0;
        SHORT_PRESS_DO_NOTHING = 1;
        SHORT_PRESS_PANIC_BUTTON = 2;
        SHORT_PRESS_MUTE_FIRE_ALARM = 3;
      }

      enum LongPress {
        LONG_PRESS_UNSPECIFIED = 0;
        LONG_PRESS_DO_NOTHING = 1;
        LONG_PRESS_PANIC_BUTTON = 2;
        LONG_PRESS_MUTE_FIRE_ALARM = 3;
      }
    }

    message ButtonActuatorControl {
      // bits [0-7]
      int32 actuator_internal_index = 1;
      // bits [10-11]
      int32 actuator_field_id_to_control = 2;
      // bit [15]
      bool button_is_active = 4;
    }

    message UiConfig {
      oneof settingField {
        bool always_on_backlight = 1;
        bool pre_authorization = 2;
      }
    }

    enum FunctionMode {
      FUNCTION_MODE_UNSPECIFIED = 0;
      FUNCTION_MODE_DO_NOTHING = 1;
      FUNCTION_MODE_ARM_DISARM = 2;
      FUNCTION_MODE_RELAY_DEVICE_CONTROL = 3;
      FUNCTION_MODE_ARM_DISARM_AND_RELAY_DEVICE_CONTROL = 4;
      FUNCTION_MODE_START_ENTRY_DELAY = 5;
    }

    enum ArmingModeOkButton {
      ARMING_MODE_OK_BUTTON_UNSPECIFIED = 0;
      ARMING_MODE_OK_BUTTON_ARM_DISARM = 1;
      ARMING_MODE_OK_BUTTON_ARM = 2;
      ARMING_MODE_OK_BUTTON_DISARM = 3;
    }
  }

  message KeypadOutdoorPart {
    ExternalPower external_power = 0xE7;

    enum ExternalPower {
      EXTERNAL_POWER_UNSPECIFIED = 0;
      EXTERNAL_POWER_NOT_POWERED = 1;
      EXTERNAL_POWER_POWERED = 2;
    }
  }

  message KeypadOutdoorFibraPart {
    CommonFibraPart common_fibra_part = 1001;
  }
}
