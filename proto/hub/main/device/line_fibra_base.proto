syntax = "proto3";

package systems.ajax.a911.grpc.v1.hub.main;
option swift_prefix = "Systems";
option java_package = "systems.ajax.a911.grpc.v1.main.device";
option java_multiple_files = true;

import "google/protobuf/wrappers.proto";

import "v1/hub/main/device/common_device.proto";
import "v1/hub/main/device/common_fibra.proto";

message LineFibraBase {
  CommonDevicePart common_part = 1000;
  CommonFibraPart common_fibra_part = 1001;

  TamperedFront tampered_front = 0x31;
  TamperSet tamper_set = 0x32;

  Subtype subtype = 0xC3;

  oneof subtypes {
    LineSplitFibra line_split_fibra = 0x01;
    LineProtectFibra line_protect_fibra = 0x02;
    OneChannelLineSupplyFibra one_channel_line_supply_fibra = 0x04;  // in the hts 0x03 is for base part of line supply
    TwoChannelsLineSupplyFibra two_channels_line_supply_fibra = 0x05;
  }

  enum Subtype {
    SUBTYPE_UNSPECIFIED = 0;
    SUBTYPE_LINE_SPLIT_FIBRA = 1;
    SUBTYPE_LINE_PROTECT_FIBRA = 2;
    reserved 3;  // will not be used in production. Just need as part of line supply
    SUBTYPE_ONE_CHANNEL_LINE_SUPPLY_FIBRA = 4;
    SUBTYPE_TWO_CHANNELS_LINE_SUPPLY_FIBRA = 5;
  }

  enum TamperedFront {
    TAMPERED_FRONT_UNSPECIFIED = 0;
    TAMPERED_FRONT_OK = 1;
    TAMPERED_FRONT_OPEN = 2;
  }

  enum TamperSet {
    TAMPER_SET_UNSPECIFIED = 0;
    TAMPER_SET_ABSENT = 1;
    TAMPER_SET_CONNECTED = 2;
  }

  message LineSplitFibra {
    ShortCircuit short_circuit = 0x3A;
    OverVoltage over_voltage = 0x3B;

    repeated SirenTrigger siren_triggers = 0x2E;

    enum SirenTrigger {
      SIREN_TRIGGER_UNSPECIFIED = 0;
      SIREN_TRIGGER_SHORT_CIRCUIT = 1;
    }
  }

  message LineProtectFibra {
    ShortCircuit short_circuit = 0x3A;
    OverVoltage over_voltage = 0x3B;
    LineSabotage line_sabotage = 0x3C;
    FuseBreak fuse_break = 0x3D;

    repeated SirenTrigger siren_triggers = 0x2E;

    enum SirenTrigger {
      SIREN_TRIGGER_UNSPECIFIED = 0;
      SIREN_TRIGGER_SHORT_CIRCUIT = 1;
    }
  }

  message OneChannelLineSupplyFibra {
    LineSupplyFibraBasePart line_supply_fibra_base_part = 0x1000;
    ChannelOne channel_one = 1;

    repeated SirenTrigger siren_triggers = 0x2E;

    enum SirenTrigger {
      SIREN_TRIGGER_UNSPECIFIED = 0;
      SIREN_TRIGGER_SHORT_CIRCUIT = 1;
    }
  }

  message TwoChannelsLineSupplyFibra {
    LineSupplyFibraBasePart line_supply_fibra_base_part = 0x1000;
    ChannelOne channel_one = 1;
    ChannelTwo channel_two = 2;

    repeated SirenTrigger siren_triggers = 0x2E;

    enum SirenTrigger {
      SIREN_TRIGGER_UNSPECIFIED = 0;
      SIREN_TRIGGER_SHORT_CIRCUIT = 1;
    }
  }

  message LineSupplyFibraBasePart {
    repeated BusPowerSetting busses_power_settings = 0x38;
    // use BussesPowerFromInputV2 instead
    // https://ajaxsystems.atlassian.net/browse/FIBRASTR-3473
    BussesPowerFromInput busses_power_from_input = 0x39 [deprecated = true];
    repeated BussesPowerFromInputV2 busses_power_from_input_v2 = 0x390;
    repeated ShortCircuit short_circuit = 0x3A;
    repeated OverVoltage over_voltage = 0x3B;
    repeated UnderVoltage under_voltage = 0x3C;
    ExternalPower external_power = 0x40;
    BatteryBroken battery_broken = 0x41;
    google.protobuf.Int32Value battery_percents = 0x42;
    repeated MalfunctionState malfunction_states = 0x44;
    Charging charging = 0x45;
    BusPower bus_power = 0x49;

    enum BusPowerSetting {
      BUS_POWER_SETTING_UNSPECIFIED = 0;
      BUS_POWER_SETTING_BUS_ONE_ENABLED = 1;
      BUS_POWER_SETTING_BUS_TWO_ENABLED = 2;
      reserved 3 to max;
    }

    enum BussesPowerFromInput {
      BUSSES_POWER_FROM_INPUT_UNSPECIFIED = 0;
      BUSSES_POWER_FROM_INPUT_NOT_DISCONNECT = 1;
      BUSSES_POWER_FROM_INPUT_DISCONNECT = 2;
    }

    enum BussesPowerFromInputV2 {
      BUSSES_POWER_FROM_INPUT_V2_UNSPECIFIED = 0;
      BUSSES_POWER_FROM_INPUT_V2_BUS_ONE = 1;
      BUSSES_POWER_FROM_INPUT_V2_BUS_TWO = 2;
      reserved 3 to max;
    }

    enum ShortCircuit {
      SHORT_CIRCUIT_UNSPECIFIED = 0;
      SHORT_CIRCUIT_BUS_ONE = 1;
      SHORT_CIRCUIT_BUS_TWO = 2;
      reserved 3 to max;
    }

    enum OverVoltage {
      OVER_VOLTAGE_UNSPECIFIED = 0;
      OVER_VOLTAGE_BUS_ONE = 1;
      OVER_VOLTAGE_BUS_TWO = 2;
      reserved 3 to max;
    }

    enum UnderVoltage {
      UNDER_VOLTAGE_UNSPECIFIED = 0;
      UNDER_VOLTAGE_BUS_ONE = 1;
      UNDER_VOLTAGE_BUS_TWO = 2;
      reserved 3 to max;
    }

    enum MalfunctionState {
      MALFUNCTION_STATE_UNSPECIFIED = 0;
      MALFUNCTION_STATE_BATTERY_CHARGED_TOO_FAST = 1;
      MALFUNCTION_STATE_BATTERY_NOT_CHARGED_IN_24_HOURS = 2;
      MALFUNCTION_STATE_CHARGER_FAILURE = 3;
      MALFUNCTION_STATE_CHARGER_TEMPERATURE_IS_OUT_OF_RANGE = 4;
      MALFUNCTION_STATE_BATTERY_NOT_HOLD_CHARGE = 5;
      reserved 6 to max;
    }

    enum BusPower {
      BUS_POWER_UNSPECIFIED = 0;
      BUS_POWER_DISABLED = 1;
      BUS_POWER_ENABLED = 2;
    }
  }

  message ChannelOne {
    google.protobuf.Int32Value out_voltage_channel_one = 0x70;
    google.protobuf.Int32Value out_current_channel_one = 0x71;
  }

  message ChannelTwo {
    google.protobuf.Int32Value out_voltage_channel_two = 0x80;
    google.protobuf.Int32Value out_current_channel_two = 0x81;
  }

  enum ShortCircuit {
    SHORT_CIRCUIT_UNSPECIFIED = 0;
    SHORT_CIRCUIT_NORMAL = 1;
    SHORT_CIRCUIT_EXISTS = 2;
  }

  enum OverVoltage {
    OVER_VOLTAGE_UNSPECIFIED = 0;
    OVER_VOLTAGE_NOT_EXIST = 1;
    OVER_VOLTAGE_EXISTS = 2;
  }

  enum LineSabotage {
    LINE_SABOTAGE_UNSPECIFIED = 0;
    LINE_SABOTAGE_NOT_EXISTS = 1;
    LINE_SABOTAGE_EXISTS = 2;
  }

  enum FuseBreak {
    FUSE_BREAK_UNSPECIFIED = 0;
    FUSE_BREAK_NORMAL = 1;
    FUSE_BREAK_BLOWN = 2;
  }

  enum ExternalPower {
    EXTERNAL_POWER_UNSPECIFIED = 0;
    EXTERNAL_POWER_DISABLED = 1;
    EXTERNAL_POWER_ENABLED = 2;
  }

  enum BatteryBroken {
    BATTERY_BROKEN_UNSPECIFIED = 0;
    BATTERY_BROKEN_IN_PLACE = 1;
    BATTERY_BROKEN_TORN_OFF = 2;
  }

  enum Charging {
    CHARGING_UNSPECIFIED = 0;
    CHARGING_DISABLED = 1;
    CHARGING_ENABLED = 2;
  }
}
