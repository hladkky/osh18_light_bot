# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto.v1.company import rapid_response_team_endpoints_pb2 as v1_dot_company_dot_rapid__response__team__endpoints__pb2
from proto.v1.company import rapid_response_team_pb2 as v1_dot_company_dot_rapid__response__team__pb2
from proto.v1.image import image_pb2 as v1_dot_image_dot_image__pb2


class RapidResponseTeamServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createRapidResponseTeam = channel.unary_unary(
                '/RapidResponseTeamService/createRapidResponseTeam',
                request_serializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.SerializeToString,
                response_deserializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
                )
        self.updateRapidResponseTeam = channel.unary_unary(
                '/RapidResponseTeamService/updateRapidResponseTeam',
                request_serializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.SerializeToString,
                response_deserializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
                )
        self.deleteRapidResponseTeam = channel.unary_unary(
                '/RapidResponseTeamService/deleteRapidResponseTeam',
                request_serializer=v1_dot_company_dot_rapid__response__team__endpoints__pb2.DeleteRapidResponseTeamRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.streamRapidResponseTeams = channel.unary_stream(
                '/RapidResponseTeamService/streamRapidResponseTeams',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
                )
        self.setRapidResponseTeamActivityStatus = channel.unary_unary(
                '/RapidResponseTeamService/setRapidResponseTeamActivityStatus',
                request_serializer=v1_dot_company_dot_rapid__response__team__endpoints__pb2.RapidResponseTeamActivityStatusRequest.SerializeToString,
                response_deserializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
                )
        self.getLightWeightRapidResponseTeams = channel.unary_unary(
                '/RapidResponseTeamService/getLightWeightRapidResponseTeams',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=v1_dot_company_dot_rapid__response__team__pb2.LightWeightRapidResponseTeams.FromString,
                )
        self.uploadRapidResponseTeamLogo = channel.stream_unary(
                '/RapidResponseTeamService/uploadRapidResponseTeamLogo',
                request_serializer=v1_dot_image_dot_image__pb2.ImageChunk.SerializeToString,
                response_deserializer=v1_dot_image_dot_image__pb2.ImageMetadataResponse.FromString,
                )
        self.getRapidResponseTeamLogo = channel.unary_unary(
                '/RapidResponseTeamService/getRapidResponseTeamLogo',
                request_serializer=v1_dot_company_dot_rapid__response__team__endpoints__pb2.RapidResponseTeamLogoRequest.SerializeToString,
                response_deserializer=v1_dot_image_dot_image__pb2.ImageMetadataResponse.FromString,
                )


class RapidResponseTeamServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createRapidResponseTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateRapidResponseTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteRapidResponseTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def streamRapidResponseTeams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setRapidResponseTeamActivityStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getLightWeightRapidResponseTeams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def uploadRapidResponseTeamLogo(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRapidResponseTeamLogo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RapidResponseTeamServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createRapidResponseTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.createRapidResponseTeam,
                    request_deserializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
                    response_serializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.SerializeToString,
            ),
            'updateRapidResponseTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.updateRapidResponseTeam,
                    request_deserializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
                    response_serializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.SerializeToString,
            ),
            'deleteRapidResponseTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteRapidResponseTeam,
                    request_deserializer=v1_dot_company_dot_rapid__response__team__endpoints__pb2.DeleteRapidResponseTeamRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'streamRapidResponseTeams': grpc.unary_stream_rpc_method_handler(
                    servicer.streamRapidResponseTeams,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.SerializeToString,
            ),
            'setRapidResponseTeamActivityStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.setRapidResponseTeamActivityStatus,
                    request_deserializer=v1_dot_company_dot_rapid__response__team__endpoints__pb2.RapidResponseTeamActivityStatusRequest.FromString,
                    response_serializer=v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.SerializeToString,
            ),
            'getLightWeightRapidResponseTeams': grpc.unary_unary_rpc_method_handler(
                    servicer.getLightWeightRapidResponseTeams,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=v1_dot_company_dot_rapid__response__team__pb2.LightWeightRapidResponseTeams.SerializeToString,
            ),
            'uploadRapidResponseTeamLogo': grpc.stream_unary_rpc_method_handler(
                    servicer.uploadRapidResponseTeamLogo,
                    request_deserializer=v1_dot_image_dot_image__pb2.ImageChunk.FromString,
                    response_serializer=v1_dot_image_dot_image__pb2.ImageMetadataResponse.SerializeToString,
            ),
            'getRapidResponseTeamLogo': grpc.unary_unary_rpc_method_handler(
                    servicer.getRapidResponseTeamLogo,
                    request_deserializer=v1_dot_company_dot_rapid__response__team__endpoints__pb2.RapidResponseTeamLogoRequest.FromString,
                    response_serializer=v1_dot_image_dot_image__pb2.ImageMetadataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RapidResponseTeamService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RapidResponseTeamService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createRapidResponseTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RapidResponseTeamService/createRapidResponseTeam',
            v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.SerializeToString,
            v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateRapidResponseTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RapidResponseTeamService/updateRapidResponseTeam',
            v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.SerializeToString,
            v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteRapidResponseTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RapidResponseTeamService/deleteRapidResponseTeam',
            v1_dot_company_dot_rapid__response__team__endpoints__pb2.DeleteRapidResponseTeamRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def streamRapidResponseTeams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/RapidResponseTeamService/streamRapidResponseTeams',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setRapidResponseTeamActivityStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RapidResponseTeamService/setRapidResponseTeamActivityStatus',
            v1_dot_company_dot_rapid__response__team__endpoints__pb2.RapidResponseTeamActivityStatusRequest.SerializeToString,
            v1_dot_company_dot_rapid__response__team__pb2.RapidResponseTeam.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getLightWeightRapidResponseTeams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RapidResponseTeamService/getLightWeightRapidResponseTeams',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            v1_dot_company_dot_rapid__response__team__pb2.LightWeightRapidResponseTeams.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def uploadRapidResponseTeamLogo(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/RapidResponseTeamService/uploadRapidResponseTeamLogo',
            v1_dot_image_dot_image__pb2.ImageChunk.SerializeToString,
            v1_dot_image_dot_image__pb2.ImageMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getRapidResponseTeamLogo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RapidResponseTeamService/getRapidResponseTeamLogo',
            v1_dot_company_dot_rapid__response__team__endpoints__pb2.RapidResponseTeamLogoRequest.SerializeToString,
            v1_dot_image_dot_image__pb2.ImageMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
