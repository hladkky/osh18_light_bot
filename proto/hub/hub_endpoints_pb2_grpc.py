# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto.facility import facility_pb2 as v1_dot_facility_dot_facility__pb2
from proto.hub import hub_endpoints_pb2 as v1_dot_hub_dot_hub__endpoints__pb2
from proto.hub.main import commands_pb2 as v1_dot_hub_dot_main_dot_commands__pb2
from proto.hub.main import hub_changes_pb2 as v1_dot_hub_dot_main_dot_hub__changes__pb2
from proto.hub.main import hub_event_pb2 as v1_dot_hub_dot_main_dot_hub__event__pb2
from proto.hub.main import hub_pb2 as v1_dot_hub_dot_main_dot_hub__pb2
from proto.hub.main import hub_text_event_pb2 as v1_dot_hub_dot_main_dot_hub__text__event__pb2
from proto.hub.main import lightweight_hub_pb2 as v1_dot_hub_dot_main_dot_lightweight__hub__pb2
from proto.hub.main import unread_events_update_pb2 as v1_dot_hub_dot_main_dot_unread__events__update__pb2


class HubServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.streamHubChanges = channel.unary_stream(
                '/HubService/streamHubChanges',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.StreamHubChangesRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_main_dot_hub__changes__pb2.HubChanges.FromString,
                )
        self.getHubIndexes = channel.unary_unary(
                '/HubService/getHubIndexes',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.HubIndexes.FromString,
                )
        self.getHubMigrationDonors = channel.unary_stream(
                '/HubService/getHubMigrationDonors',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubMigrationDonorsRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.HubMigrationDonor.FromString,
                )
        self.streamLightweightHubs = channel.stream_stream(
                '/HubService/streamLightweightHubs',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.GetLightweightHubsRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_main_dot_lightweight__hub__pb2.LightweightHub.FromString,
                )
        self.sendHubCommand = channel.unary_unary(
                '/HubService/sendHubCommand',
                request_serializer=v1_dot_hub_dot_main_dot_commands__pb2.HubCommand.SerializeToString,
                response_deserializer=v1_dot_hub_dot_main_dot_commands__pb2.HubCommand.Result.FromString,
                )
        self.streamHubEvents = channel.unary_stream(
                '/HubService/streamHubEvents',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.StreamHubEventsRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_main_dot_hub__event__pb2.HubEvent.FromString,
                )
        self.getHubEvents = channel.unary_unary(
                '/HubService/getHubEvents',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubEventsRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubEventsResponse.FromString,
                )
        self.getHubInvites = channel.unary_unary(
                '/HubService/getHubInvites',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubInvitesRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.HubInvites.FromString,
                )
        self.bindHubToUser = channel.unary_unary(
                '/HubService/bindHubToUser',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.BindHubToUserRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.BindHubToUserResponse.FromString,
                )
        self.addHub = channel.unary_unary(
                '/HubService/addHub',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.AddHubRequest.SerializeToString,
                response_deserializer=v1_dot_facility_dot_facility__pb2.Facility.FromString,
                )
        self.addHubV2 = channel.unary_unary(
                '/HubService/addHubV2',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.AddHubRequest.SerializeToString,
                response_deserializer=v1_dot_facility_dot_facility__pb2.Facility.FromString,
                )
        self.getHub = channel.unary_unary(
                '/HubService/getHub',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_main_dot_hub__pb2.Hub.FromString,
                )
        self.streamHubUnreadEventsCount = channel.unary_stream(
                '/HubService/streamHubUnreadEventsCount',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.StreamHubUnreadEventsCountRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_main_dot_unread__events__update__pb2.UnreadEventsUpdate.FromString,
                )
        self.streamHubTextEvents = channel.unary_stream(
                '/HubService/streamHubTextEvents',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.StreamHubTextEventsRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_main_dot_hub__text__event__pb2.HubTextEvent.FromString,
                )
        self.capturePhotoOnDemandByCompany = channel.unary_unary(
                '/HubService/capturePhotoOnDemandByCompany',
                request_serializer=v1_dot_hub_dot_hub__endpoints__pb2.CapturePhotoOnDemandRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.CapturePhotoOnDemandResponse.FromString,
                )


class HubServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def streamHubChanges(self, request, context):
        """
        Streams hub changes.
        First message of the stream will always contain full hub information as a source.
        All the subsequent messages will contain updates for the source.

        Keep in mind that if stream was closed and automatically reopened (because of any connectivity issues)
        full hub info message will come after stream reopened.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getHubIndexes(self, request, context):
        """
        Returns a list of all hubs for the user with minimal information required to perform local search by id or name
        and the list can be used to organize pagination.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getHubMigrationDonors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def streamLightweightHubs(self, request_iterator, context):
        """
        Bi directional stream that provides lightweight information about hubs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendHubCommand(self, request, context):
        """
        Sends hub command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def streamHubEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getHubEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getHubInvites(self, request, context):
        """
        Get hub invites.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def bindHubToUser(self, request, context):
        """
        Binds hub to the current user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addHub(self, request, context):
        """
        Add hub using legacy flow (before installation companies)

        Possible error statuses and corresponding error templates

        NOT_FOUND - systems.ajax.a911.error.notFound.hub
        FAILED_PRECONDITION - systems.ajax.a911.error.alreadyInUse.masterKey
        FAILED_PRECONDITION - systems.ajax.a911.error.alreadyInUse.masterKey.company
        INVALID_ARGUMENT - systems.ajax.a911.error.invalid.hub.masterKey
        DEADLINE_EXCEEDED - systems.ajax.a911.error.timeout
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addHubV2(self, request, context):
        """
        Add hub using new flow for installation companies

        Possible error statuses and corresponding error templates

        NOT_FOUND - systems.ajax.a911.error.notFound.hub
        FAILED_PRECONDITION - systems.ajax.a911.error.alreadyInUse.masterKey
        FAILED_PRECONDITION - systems.ajax.a911.error.alreadyInUse.masterKey.company
        INVALID_ARGUMENT - systems.ajax.a911.error.invalid.hub.masterKey
        DEADLINE_EXCEEDED - systems.ajax.a911.error.timeout
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getHub(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def streamHubUnreadEventsCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def streamHubTextEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def capturePhotoOnDemandByCompany(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HubServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'streamHubChanges': grpc.unary_stream_rpc_method_handler(
                    servicer.streamHubChanges,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.StreamHubChangesRequest.FromString,
                    response_serializer=v1_dot_hub_dot_main_dot_hub__changes__pb2.HubChanges.SerializeToString,
            ),
            'getHubIndexes': grpc.unary_unary_rpc_method_handler(
                    servicer.getHubIndexes,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=v1_dot_hub_dot_hub__endpoints__pb2.HubIndexes.SerializeToString,
            ),
            'getHubMigrationDonors': grpc.unary_stream_rpc_method_handler(
                    servicer.getHubMigrationDonors,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubMigrationDonorsRequest.FromString,
                    response_serializer=v1_dot_hub_dot_hub__endpoints__pb2.HubMigrationDonor.SerializeToString,
            ),
            'streamLightweightHubs': grpc.stream_stream_rpc_method_handler(
                    servicer.streamLightweightHubs,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.GetLightweightHubsRequest.FromString,
                    response_serializer=v1_dot_hub_dot_main_dot_lightweight__hub__pb2.LightweightHub.SerializeToString,
            ),
            'sendHubCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.sendHubCommand,
                    request_deserializer=v1_dot_hub_dot_main_dot_commands__pb2.HubCommand.FromString,
                    response_serializer=v1_dot_hub_dot_main_dot_commands__pb2.HubCommand.Result.SerializeToString,
            ),
            'streamHubEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.streamHubEvents,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.StreamHubEventsRequest.FromString,
                    response_serializer=v1_dot_hub_dot_main_dot_hub__event__pb2.HubEvent.SerializeToString,
            ),
            'getHubEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.getHubEvents,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubEventsRequest.FromString,
                    response_serializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubEventsResponse.SerializeToString,
            ),
            'getHubInvites': grpc.unary_unary_rpc_method_handler(
                    servicer.getHubInvites,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubInvitesRequest.FromString,
                    response_serializer=v1_dot_hub_dot_hub__endpoints__pb2.HubInvites.SerializeToString,
            ),
            'bindHubToUser': grpc.unary_unary_rpc_method_handler(
                    servicer.bindHubToUser,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.BindHubToUserRequest.FromString,
                    response_serializer=v1_dot_hub_dot_hub__endpoints__pb2.BindHubToUserResponse.SerializeToString,
            ),
            'addHub': grpc.unary_unary_rpc_method_handler(
                    servicer.addHub,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.AddHubRequest.FromString,
                    response_serializer=v1_dot_facility_dot_facility__pb2.Facility.SerializeToString,
            ),
            'addHubV2': grpc.unary_unary_rpc_method_handler(
                    servicer.addHubV2,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.AddHubRequest.FromString,
                    response_serializer=v1_dot_facility_dot_facility__pb2.Facility.SerializeToString,
            ),
            'getHub': grpc.unary_unary_rpc_method_handler(
                    servicer.getHub,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.GetHubRequest.FromString,
                    response_serializer=v1_dot_hub_dot_main_dot_hub__pb2.Hub.SerializeToString,
            ),
            'streamHubUnreadEventsCount': grpc.unary_stream_rpc_method_handler(
                    servicer.streamHubUnreadEventsCount,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.StreamHubUnreadEventsCountRequest.FromString,
                    response_serializer=v1_dot_hub_dot_main_dot_unread__events__update__pb2.UnreadEventsUpdate.SerializeToString,
            ),
            'streamHubTextEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.streamHubTextEvents,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.StreamHubTextEventsRequest.FromString,
                    response_serializer=v1_dot_hub_dot_main_dot_hub__text__event__pb2.HubTextEvent.SerializeToString,
            ),
            'capturePhotoOnDemandByCompany': grpc.unary_unary_rpc_method_handler(
                    servicer.capturePhotoOnDemandByCompany,
                    request_deserializer=v1_dot_hub_dot_hub__endpoints__pb2.CapturePhotoOnDemandRequest.FromString,
                    response_serializer=v1_dot_hub_dot_hub__endpoints__pb2.CapturePhotoOnDemandResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'HubService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HubService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def streamHubChanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/HubService/streamHubChanges',
            v1_dot_hub_dot_hub__endpoints__pb2.StreamHubChangesRequest.SerializeToString,
            v1_dot_hub_dot_main_dot_hub__changes__pb2.HubChanges.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getHubIndexes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubService/getHubIndexes',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            v1_dot_hub_dot_hub__endpoints__pb2.HubIndexes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getHubMigrationDonors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/HubService/getHubMigrationDonors',
            v1_dot_hub_dot_hub__endpoints__pb2.GetHubMigrationDonorsRequest.SerializeToString,
            v1_dot_hub_dot_hub__endpoints__pb2.HubMigrationDonor.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def streamLightweightHubs(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/HubService/streamLightweightHubs',
            v1_dot_hub_dot_hub__endpoints__pb2.GetLightweightHubsRequest.SerializeToString,
            v1_dot_hub_dot_main_dot_lightweight__hub__pb2.LightweightHub.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendHubCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubService/sendHubCommand',
            v1_dot_hub_dot_main_dot_commands__pb2.HubCommand.SerializeToString,
            v1_dot_hub_dot_main_dot_commands__pb2.HubCommand.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def streamHubEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/HubService/streamHubEvents',
            v1_dot_hub_dot_hub__endpoints__pb2.StreamHubEventsRequest.SerializeToString,
            v1_dot_hub_dot_main_dot_hub__event__pb2.HubEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getHubEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubService/getHubEvents',
            v1_dot_hub_dot_hub__endpoints__pb2.GetHubEventsRequest.SerializeToString,
            v1_dot_hub_dot_hub__endpoints__pb2.GetHubEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getHubInvites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubService/getHubInvites',
            v1_dot_hub_dot_hub__endpoints__pb2.GetHubInvitesRequest.SerializeToString,
            v1_dot_hub_dot_hub__endpoints__pb2.HubInvites.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def bindHubToUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubService/bindHubToUser',
            v1_dot_hub_dot_hub__endpoints__pb2.BindHubToUserRequest.SerializeToString,
            v1_dot_hub_dot_hub__endpoints__pb2.BindHubToUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addHub(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubService/addHub',
            v1_dot_hub_dot_hub__endpoints__pb2.AddHubRequest.SerializeToString,
            v1_dot_facility_dot_facility__pb2.Facility.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addHubV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubService/addHubV2',
            v1_dot_hub_dot_hub__endpoints__pb2.AddHubRequest.SerializeToString,
            v1_dot_facility_dot_facility__pb2.Facility.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getHub(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubService/getHub',
            v1_dot_hub_dot_hub__endpoints__pb2.GetHubRequest.SerializeToString,
            v1_dot_hub_dot_main_dot_hub__pb2.Hub.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def streamHubUnreadEventsCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/HubService/streamHubUnreadEventsCount',
            v1_dot_hub_dot_hub__endpoints__pb2.StreamHubUnreadEventsCountRequest.SerializeToString,
            v1_dot_hub_dot_main_dot_unread__events__update__pb2.UnreadEventsUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def streamHubTextEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/HubService/streamHubTextEvents',
            v1_dot_hub_dot_hub__endpoints__pb2.StreamHubTextEventsRequest.SerializeToString,
            v1_dot_hub_dot_main_dot_hub__text__event__pb2.HubTextEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def capturePhotoOnDemandByCompany(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubService/capturePhotoOnDemandByCompany',
            v1_dot_hub_dot_hub__endpoints__pb2.CapturePhotoOnDemandRequest.SerializeToString,
            v1_dot_hub_dot_hub__endpoints__pb2.CapturePhotoOnDemandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
