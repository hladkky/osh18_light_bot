# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.hub import hub_image_endpoints_pb2 as v1_dot_hub_dot_hub__image__endpoints__pb2
from proto.image import image_pb2 as v1_dot_image_dot_image__pb2


class HubImageServiceStub(object):
    """*
    Service for upload image to legacy image service. Max image size - 1 Mb.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.uploadRoomPhoto = channel.stream_unary(
                '/HubImageService/uploadRoomPhoto',
                request_serializer=v1_dot_image_dot_image__pb2.ImageChunk.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__image__endpoints__pb2.UploadPhotoResponse.FromString,
                )
        self.deleteRoomPhoto = channel.unary_unary(
                '/HubImageService/deleteRoomPhoto',
                request_serializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeleteRoomPhotoRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeletePhotoResponse.FromString,
                )
        self.uploadGroupPhoto = channel.stream_unary(
                '/HubImageService/uploadGroupPhoto',
                request_serializer=v1_dot_image_dot_image__pb2.ImageChunk.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__image__endpoints__pb2.UploadPhotoResponse.FromString,
                )
        self.deleteGroupPhoto = channel.unary_unary(
                '/HubImageService/deleteGroupPhoto',
                request_serializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeleteGroupPhotoRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeletePhotoResponse.FromString,
                )
        self.uploadHubPhoto = channel.stream_unary(
                '/HubImageService/uploadHubPhoto',
                request_serializer=v1_dot_image_dot_image__pb2.ImageChunk.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__image__endpoints__pb2.UploadPhotoResponse.FromString,
                )
        self.deleteHubPhoto = channel.unary_unary(
                '/HubImageService/deleteHubPhoto',
                request_serializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeleteHubPhotoRequest.SerializeToString,
                response_deserializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeletePhotoResponse.FromString,
                )


class HubImageServiceServicer(object):
    """*
    Service for upload image to legacy image service. Max image size - 1 Mb.
    """

    def uploadRoomPhoto(self, request_iterator, context):
        """*
        Put in metadata for last chunk:
        hub_id - id of hub with room
        room_id - id of room
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteRoomPhoto(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def uploadGroupPhoto(self, request_iterator, context):
        """*
        Put in metadata for last chunk:
        hub_id - id of hub with group
        group_id - id of group
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteGroupPhoto(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def uploadHubPhoto(self, request_iterator, context):
        """*
        Put in metadata for last chunk:
        hub_id - id of hub
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteHubPhoto(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HubImageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'uploadRoomPhoto': grpc.stream_unary_rpc_method_handler(
                    servicer.uploadRoomPhoto,
                    request_deserializer=v1_dot_image_dot_image__pb2.ImageChunk.FromString,
                    response_serializer=v1_dot_hub_dot_hub__image__endpoints__pb2.UploadPhotoResponse.SerializeToString,
            ),
            'deleteRoomPhoto': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteRoomPhoto,
                    request_deserializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeleteRoomPhotoRequest.FromString,
                    response_serializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeletePhotoResponse.SerializeToString,
            ),
            'uploadGroupPhoto': grpc.stream_unary_rpc_method_handler(
                    servicer.uploadGroupPhoto,
                    request_deserializer=v1_dot_image_dot_image__pb2.ImageChunk.FromString,
                    response_serializer=v1_dot_hub_dot_hub__image__endpoints__pb2.UploadPhotoResponse.SerializeToString,
            ),
            'deleteGroupPhoto': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteGroupPhoto,
                    request_deserializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeleteGroupPhotoRequest.FromString,
                    response_serializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeletePhotoResponse.SerializeToString,
            ),
            'uploadHubPhoto': grpc.stream_unary_rpc_method_handler(
                    servicer.uploadHubPhoto,
                    request_deserializer=v1_dot_image_dot_image__pb2.ImageChunk.FromString,
                    response_serializer=v1_dot_hub_dot_hub__image__endpoints__pb2.UploadPhotoResponse.SerializeToString,
            ),
            'deleteHubPhoto': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteHubPhoto,
                    request_deserializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeleteHubPhotoRequest.FromString,
                    response_serializer=v1_dot_hub_dot_hub__image__endpoints__pb2.DeletePhotoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'HubImageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HubImageService(object):
    """*
    Service for upload image to legacy image service. Max image size - 1 Mb.
    """

    @staticmethod
    def uploadRoomPhoto(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/HubImageService/uploadRoomPhoto',
            v1_dot_image_dot_image__pb2.ImageChunk.SerializeToString,
            v1_dot_hub_dot_hub__image__endpoints__pb2.UploadPhotoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteRoomPhoto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubImageService/deleteRoomPhoto',
            v1_dot_hub_dot_hub__image__endpoints__pb2.DeleteRoomPhotoRequest.SerializeToString,
            v1_dot_hub_dot_hub__image__endpoints__pb2.DeletePhotoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def uploadGroupPhoto(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/HubImageService/uploadGroupPhoto',
            v1_dot_image_dot_image__pb2.ImageChunk.SerializeToString,
            v1_dot_hub_dot_hub__image__endpoints__pb2.UploadPhotoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteGroupPhoto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubImageService/deleteGroupPhoto',
            v1_dot_hub_dot_hub__image__endpoints__pb2.DeleteGroupPhotoRequest.SerializeToString,
            v1_dot_hub_dot_hub__image__endpoints__pb2.DeletePhotoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def uploadHubPhoto(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/HubImageService/uploadHubPhoto',
            v1_dot_image_dot_image__pb2.ImageChunk.SerializeToString,
            v1_dot_hub_dot_hub__image__endpoints__pb2.UploadPhotoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteHubPhoto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/HubImageService/deleteHubPhoto',
            v1_dot_hub_dot_hub__image__endpoints__pb2.DeleteHubPhotoRequest.SerializeToString,
            v1_dot_hub_dot_hub__image__endpoints__pb2.DeletePhotoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
