syntax = "proto3";

option swift_prefix = "";
option java_generic_services = true;
option java_package = "systems.ajax.a911.grpc.hub.v1";

import "google/protobuf/empty.proto";

import "v1/hub/main/hub.proto";
import "v1/hub/main/hub_index.proto";
import "v1/hub/main/lightweight_hub.proto";
import "v1/hub/main/commands.proto";
import "v1/hub/main/hub_event.proto";
import "v1/hub/main/hub_text_event.proto";
import "v1/hub/main/unread_events_update.proto";
import "v1/hub/main/hub_for_migration.proto";
import "v1/hub/main/hub_changes.proto";
import "v1/facility/facility.proto";

import "systems/ajax/logging/proto/log_marker.proto";
import "systems/ajax/logging/proto/formatting_options.proto";

service HubService {
    /*
     * Streams hub changes.
     * First message of the stream will always contain full hub information as a source.
     * All the subsequent messages will contain updates for the source.
     *
     * Keep in mind that if stream was closed and automatically reopened (because of any connectivity issues)
     * full hub info message will come after stream reopened.
     */
    rpc streamHubChanges (StreamHubChangesRequest) returns (stream systems.ajax.a911.grpc.v1.hub.main.HubChanges);

    /*
     * Returns a list of all hubs for the user with minimal information required to perform local search by id or name
     * and the list can be used to organize pagination.
     */
    rpc getHubIndexes (google.protobuf.Empty) returns (HubIndexes);

    rpc getHubMigrationDonors (GetHubMigrationDonorsRequest) returns (stream HubMigrationDonor);

    /*
     * Bi directional stream that provides lightweight information about hubs.
     */
    rpc streamLightweightHubs (stream GetLightweightHubsRequest) returns (stream systems.ajax.a911.grpc.v1.hub.main.LightweightHub);

    /*
     * Sends hub command.
     */
    rpc sendHubCommand (systems.ajax.a911.grpc.v1.hub.main.HubCommand) returns (systems.ajax.a911.grpc.v1.hub.main.HubCommand.Result);

    rpc streamHubEvents (StreamHubEventsRequest) returns (stream systems.ajax.a911.grpc.v1.hub.main.HubEvent);

    rpc getHubEvents (GetHubEventsRequest) returns (GetHubEventsResponse);

    /*
     * Get hub invites.
     */
    rpc getHubInvites (GetHubInvitesRequest) returns (HubInvites);

    /*
     * Binds hub to the current user.
     */
    rpc bindHubToUser (BindHubToUserRequest) returns (BindHubToUserResponse);

    /*
    * Add hub using legacy flow (before installation companies)
    *
    * Possible error statuses and corresponding error templates
    *
    * NOT_FOUND - systems.ajax.a911.error.notFound.hub
    * FAILED_PRECONDITION - systems.ajax.a911.error.alreadyInUse.masterKey
    * FAILED_PRECONDITION - systems.ajax.a911.error.alreadyInUse.masterKey.company
    * INVALID_ARGUMENT - systems.ajax.a911.error.invalid.hub.masterKey
    * DEADLINE_EXCEEDED - systems.ajax.a911.error.timeout
    */
    rpc addHub(AddHubRequest) returns (Facility);

    /*
    * Add hub using new flow for installation companies
    *
    * Possible error statuses and corresponding error templates
    *
    * NOT_FOUND - systems.ajax.a911.error.notFound.hub
    * FAILED_PRECONDITION - systems.ajax.a911.error.alreadyInUse.masterKey
    * FAILED_PRECONDITION - systems.ajax.a911.error.alreadyInUse.masterKey.company
    * INVALID_ARGUMENT - systems.ajax.a911.error.invalid.hub.masterKey
    * DEADLINE_EXCEEDED - systems.ajax.a911.error.timeout
    */
    rpc addHubV2(AddHubRequest) returns (Facility);

    rpc getHub(GetHubRequest) returns (systems.ajax.a911.grpc.v1.hub.main.Hub);

    rpc streamHubUnreadEventsCount (StreamHubUnreadEventsCountRequest) returns (stream systems.ajax.a911.grpc.v1.hub.main.UnreadEventsUpdate);

    rpc streamHubTextEvents (StreamHubTextEventsRequest) returns (stream systems.ajax.a911.grpc.v1.hub.main.HubTextEvent);

    rpc capturePhotoOnDemandByCompany (CapturePhotoOnDemandRequest) returns (CapturePhotoOnDemandResponse);
}

message StreamHubChangesRequest {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
}

message HubIndexes {
    repeated systems.ajax.a911.grpc.v1.hub.main.HubIndex hub_index = 1 [(disable_logging) = true];
}

message GetLightweightHubsRequest {
    repeated string hub_ids = 1;
}

message GetHubEventsRequest {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
    int32 limit = 2;
    int32 offset = 3;
}

message GetHubEventsResponse {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
    repeated systems.ajax.a911.grpc.v1.hub.main.HubEvent hub_events = 4;
}

message StreamHubEventsRequest {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
    int32 limit = 2;
}

message GetHubInvitesRequest {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
}

message HubInvites {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
    repeated string invited_emails = 2;
}

message BindHubToUserRequest {
    string hub_name = 1;
    string hub_qr_code = 2;
}

message AddHubRequest {
    string hub_name = 1;
    string hub_qr_code = 2;
}

message BindHubToUserResponse {
}

message GetHubMigrationDonorsRequest {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
    int32 limit = 2;
    string pageable_token = 3;
}

message HubMigrationDonor {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
    systems.ajax.a911.grpc.v1.hub.main.HubForMigration hub_for_migration = 2;
    repeated ErrorCode error_codes = 3;
    string pageable_token = 4;

    enum ErrorCode {
        NO_ERROR = 0;
        TARGET_ARMED = 1;
        TARGET_OFFLINE = 2;
        DONOR_ONLINE = 3;
        TARGET_FW_LOWER_MINIMAL = 4;
        DONOR_FW_LOWER_MINIMAL = 5;
        TARGET_FW_LOWER_DONOR = 6;
        DONOR_TARGET_INCOMPATIBLE_TYPES = 7;
        NO_PERMISSION = 8;
        DONOR_IS_ALREADY_IN_MIGRATION = 9;
        TARGET_IS_ALREADY_IN_MIGRATION = 10;
    }
}

message GetHubRequest {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
}

message StreamHubUnreadEventsCountRequest {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
}

message StreamHubTextEventsRequest {
}

message CapturePhotoOnDemandRequest {
    string hub_id = 1 [(log_marker) = LOG_MARKER_HUB_ID];
    string device_id = 2;
    DeviceType device_type = 3;

    enum DeviceType {
        DEVICE_TYPE_UNSPECIFIED = 0;
        DEVICE_TYPE_MOTION_CAM = 1;
        DEVICE_TYPE_MOTION_CAM_OUTDOOR = 2;
        DEVICE_TYPE_MOTION_CAM_PHOD_FIBRA = 3;
    }
}

message CapturePhotoOnDemandResponse {
    systems.ajax.a911.grpc.v1.hub.main.HubCommand.Result result = 1;
}
