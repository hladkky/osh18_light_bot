# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.facility import facility_maintenance_endpoints_pb2 as v1_dot_facility_dot_facility__maintenance__endpoints__pb2
from proto.facility import facility_maintenance_pb2 as v1_dot_facility_dot_facility__maintenance__pb2


class FacilityMaintenanceDataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.streamFacilityMaintenanceData = channel.unary_stream(
                '/FacilityMaintenanceDataService/streamFacilityMaintenanceData',
                request_serializer=v1_dot_facility_dot_facility__maintenance__endpoints__pb2.GetFacilityMaintenanceDataRequest.SerializeToString,
                response_deserializer=v1_dot_facility_dot_facility__maintenance__pb2.FacilityMaintenanceData.FromString,
                )
        self.saveFacilityMaintenanceData = channel.unary_unary(
                '/FacilityMaintenanceDataService/saveFacilityMaintenanceData',
                request_serializer=v1_dot_facility_dot_facility__maintenance__pb2.FacilityMaintenanceData.SerializeToString,
                response_deserializer=v1_dot_facility_dot_facility__maintenance__pb2.FacilityMaintenanceData.FromString,
                )


class FacilityMaintenanceDataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def streamFacilityMaintenanceData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def saveFacilityMaintenanceData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FacilityMaintenanceDataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'streamFacilityMaintenanceData': grpc.unary_stream_rpc_method_handler(
                    servicer.streamFacilityMaintenanceData,
                    request_deserializer=v1_dot_facility_dot_facility__maintenance__endpoints__pb2.GetFacilityMaintenanceDataRequest.FromString,
                    response_serializer=v1_dot_facility_dot_facility__maintenance__pb2.FacilityMaintenanceData.SerializeToString,
            ),
            'saveFacilityMaintenanceData': grpc.unary_unary_rpc_method_handler(
                    servicer.saveFacilityMaintenanceData,
                    request_deserializer=v1_dot_facility_dot_facility__maintenance__pb2.FacilityMaintenanceData.FromString,
                    response_serializer=v1_dot_facility_dot_facility__maintenance__pb2.FacilityMaintenanceData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FacilityMaintenanceDataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FacilityMaintenanceDataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def streamFacilityMaintenanceData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/FacilityMaintenanceDataService/streamFacilityMaintenanceData',
            v1_dot_facility_dot_facility__maintenance__endpoints__pb2.GetFacilityMaintenanceDataRequest.SerializeToString,
            v1_dot_facility_dot_facility__maintenance__pb2.FacilityMaintenanceData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def saveFacilityMaintenanceData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FacilityMaintenanceDataService/saveFacilityMaintenanceData',
            v1_dot_facility_dot_facility__maintenance__pb2.FacilityMaintenanceData.SerializeToString,
            v1_dot_facility_dot_facility__maintenance__pb2.FacilityMaintenanceData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
